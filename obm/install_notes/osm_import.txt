##### Load and Update SFO OSM Extract #####

#### make intarray contrib module ####
cd /usr/local/src/postgresql/postgresql-9.0.3/contrib/intarray
sudo make
sudo make install
### verify
pg_config --sharedir
ls -lh /usr/local/pgsql/share/contrib
## should see _int.sql
## restart postgresql
sudo /etc/init.d/postgresql restart

#### createdb and add intarry support ####
### after we have shared -su name, then we use -O owner switch with createdb
createdb -T template_postgis sf_test
psql -d sf_test -f /usr/local/pgsql/share/contrib/_int.sql

#### import osm data ####
cd /mnt/z-raid6/gis/osm/extracts
osm2pgsql --slim -d sf_test -H localhost -P 5432 -C 4096 -S /usr/local/share/osm2pgsql/default.style sfo_metro.osm

#### Update using osmosis ####
## Helpful URLs for reading about following steps
#1 http://wiki.openstreetmap.org/wiki/Planet.osm/diffs>
#2 http://wiki.openstreetmap.org/wiki/Osmosis/Detailed_Usage

### I took the approach of using hourly replicates
### to get the inital db import up-to-date

### inital setup for osmosis ###
mkdir /mnt/z-raid6/gis/osmosis_working
cd /usr/local/src/osmosis/osmosis-0.38/bin/
## create osmosis working DIR, configuration.txt and download.lock using following osmosis command
./osmosis --read-replication-interval-init workingDirectory=/mnt/z-raid6/gis/osmosis_working/
## create a state.txt in osmosis working DIR --> /mnt/z-raid6/gis/osmosis_working/state.txt
## state.txt signifies the time (Universal Standard Time) that we want osmosis
## to start pulling changes from server and comparing to our extract. For osm extracts this is
## roughly the hours or minutes immediately following extract download.
## We can locate the correct time values to put in state.txt by browsing
## http://planet.openstreetmap.org/hour-replicate or http://planet.openstreetmap.org/minutely-replicate
## depending on what we are targeting. For example, for the sfo_metro.osm extract the value to put in state.txt 
## can be found in this URL for hour-replicates. It is the time immediately following extract download
http://planet.openstreetmap.org/hour-replicate/000/010/897.state.txt
## modify configuration.txt to download hourly replicates
## setup maxInterval for 1/2 day chunks
## maxInterval demarcates a  window ( using the number of seconds ) that osmosis will grab changes from the server
vim /mnt/z-raid6/gis/osmosis_working/configuration.txt
baseUrl = http://planet.openstreetmap.org/hour-replicate/
maxInterval = 43200

### Download replicates in half day chunks ####
## creating diffs or changesets doesn't seem to work with versions of osmosis <0.36. So make sure to use >0.36.
## we are using osmosis 0.38
./osmosis --read-replication-interval workingDirectory=/mnt/z-raid6/gis/osmosis_working/ --simplify-change --write-xml-change /mnt/z-raid6/gis/osmosis_working/changes_hourly1.osc.gz
## repeat process incrementing change_hourly.osc.gz (eg. changes_hourly2.osc.gz)
## check timestamp of state file until it is current
cat /mnt/z-raid6/gis/osmosis_working/state.txt

### Apply diffs/changeset replicates to PostGIS###
## use osm2pgsql and repeat for each changes_hour.osc.gz you've downloaded ##
osm2pgsql --append --slim -d sf_test -H localhost -P 5432 -C 4096 -S /usr/local/share/osm2pgsql/default.style changes_hourly1.osc.gz

## diffs/changesets can also be applied to .osm files before upload to postgis using osmosis
## the following command throws an error. But it should work
./osmosis --read-xml-change file="/mnt/z-raid6/gis/osmosis_working/changes_hourly1.osc.gz" --read-xml file="/mnt/z-raid6/gis/osm/extracts/sfo_metro.osm" --apply-change --write-xml file="/mnt/z-raid6/gis/extracts/sfo_metro_appliedchanges.osm"
